{"version":3,"sources":["TILE_TEMPLATES.js","PlayerDisplay.js","Map.js","HUD.js","Inventory.js","App.js","index.js"],"names":["TILE_TEMPLATES","open","type","isVisible","isKnown","player","wall","door","status","item","PlayerDisplay","props","react_default","a","createElement","className","stats","hp","sp","cellDimensions","Map","dimensions","gridTemplateRows","concat","mapState","length","gridTemplateColumns","getClassNames","cell","classNames","push","join","rows","map","row","cellFocus","playerObj","filter","o","style","HUD","beginIndex","logs","endIndex","undefined","slice","log","i","key","turn","message","prevLogIndicator","alphabet","Inventory","inventory","inv","label","arrowInputs","description","keyCode","interactionInputs","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getCell","x","y","state","initRoom","wrappedTile","tile","arr","turnCount","playerStats","displayLogs","window","addEventListener","e","arrInput","handleInput","interactInput","handleInteraction","update","logToAdd","updatedTurnCount","engine","updatedMap","JSON","parse","stringify","hasOwnProperty","currPos","getPlayerPos","assign","to","updatedDoor","doorUpdate","updatedLogs","setState","forEach","rowIndex","colIndex","direction","xMod","yMod","handleMove","interaction","getClosest","attemptDoorHandle","obj","gotObj","_this2","coords","gotCell","apply","toConsumableArray","objectSpread","toCell","move","updateGameDisplay","toStatus","src_PlayerDisplay_0","src_Map_0","src_HUD_0","src_Inventory","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.90a066bd.chunk.js","sourcesContent":["const ITEM_TEMPLATES = {\r\n\tpotion: {\r\n\t\ttype: 'potion'\r\n\t}\r\n};\r\n\r\n//add:\r\n//- reference to tile's coordinates (i.e. coords: {x, y})\r\nconst TILE_TEMPLATES = {\r\n\topen: {\r\n\t\ttype: 'open',\r\n\t\tisVisible: true,\r\n\t\tisKnown: true\r\n\t},\r\n\tplayer: {\r\n\t\ttype: 'player'\r\n\t},\r\n\twall: {\r\n\t\ttype: 'wall',\r\n\t\tisVisible: true,\r\n\t\tisKnown: true\r\n\t},\r\n\tdoor: {\r\n\t\ttype: 'door',\r\n\t\tstatus: 'closed', //['closed', 'open', 'locked', 'crushed']\r\n\t\tisVisible: true,\r\n\t\tisKnown: true\r\n\t},\r\n\titem: {\r\n\t\ttype: 'item',\r\n\t\titem: ITEM_TEMPLATES.potion\r\n\t}\r\n};\r\n\r\nexport default TILE_TEMPLATES;","import React from 'react';\r\nimport './PlayerDisplay.css';\r\n\r\nconst PlayerDisplay = (props) => {\r\n\treturn (\r\n\t\t<div className=\"player-display-wrapper display-box\">\r\n\t\t\t<span className=\"display-title\">Player</span>\r\n\t\t\t<p>\r\n\t\t\t\t<span>HP:</span><span>{props.stats.hp}</span>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<span>SP:</span><span>{props.stats.sp}</span>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default PlayerDisplay;","import React from 'react';\r\nimport './Map.css';\r\n\r\n//(consider creating a 'cell' component to print and keep <Map> stateful - might cut down on re-rendering)\r\n//take a series of coordinates and instructions from <App>\r\n\r\nconst cellDimensions = {\r\n\twidth: 14,\r\n\theight: 18\r\n}\r\n\r\nconst Map = (props) => {\r\n\tconst dimensions = {\r\n\t\tgridTemplateRows: `repeat(${props.mapState.length}, ${cellDimensions.height}px)`,\r\n\t\tgridTemplateColumns: `repeat(${props.mapState[0].length}, ${cellDimensions.width}px)`\r\n\t};\r\n\tconst getClassNames = (cell) => {\r\n\t\tlet classNames = [];\r\n\t\tclassNames.push('cell');\r\n\t\tclassNames.push(cell.type);\r\n\t\tif (cell.type === 'door') classNames.push(cell.status);\r\n\t\treturn classNames.join(' ');\r\n\t};\r\n\tconst rows = props.mapState\r\n\t\t.map(row => row\r\n\t\t\t.map(cell => {\r\n\t\t\t\tlet cellFocus = cell[0];\r\n\t\t\t\tconst playerObj = cell.filter(o => o.type === 'player');\r\n\t\t\t\tif (playerObj.length > 0) cellFocus = playerObj[0];\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className={getClassNames(cellFocus)}></div>\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t\t\t\r\n\t\t);\r\n\treturn (\r\n\t\t<div className=\"map-wrapper display-box\">\r\n\t\t\t<span className=\"display-title\">Map</span>\r\n\t\t\t<div className=\"map\" style={dimensions}>\r\n\t\t\t\t{rows}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Map;","import React from 'react';\r\nimport './HUD.css';\r\n\r\nconst HUD = (props) => {\r\n\tconst beginIndex = props.logs.length > 10 ? props.logs.length - 10 : 0;\r\n\tconst endIndex = props.logs.length > 10 ? props.logs.length - 1 : undefined;\r\n\tconst logs = props.logs\r\n\t\t.slice(beginIndex, endIndex)\r\n\t\t.map((log, i) => (\r\n\t\t\t<p key={i} className=\"heads-up-display-log\">\r\n\t\t\t\t<span>{log.turn}</span>\r\n\t\t\t\t<span>{log.message}</span>\r\n\t\t\t</p>\r\n\t\t));\r\n\tconst prevLogIndicator = props.logs.length > 10 ? '...' : null;\r\n\treturn (\r\n\t\t<div className=\"heads-up-display display-box\">\r\n\t\t\t<span className=\"display-title\">Logs</span>\r\n\t\t\t{prevLogIndicator}\r\n\t\t\t{logs}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default HUD;","import React from 'react';\r\n\r\nconst alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\r\n\r\nconst Inventory = (props) => {\r\n\tconst inventory = props.inv.map((item, i) => (\r\n\t\t<p key={i} className={`inventory-item ${item.type}`}>\r\n\t\t\t<span>{alphabet[i]}</span>\r\n\t\t\t<span>{item.label}</span>\r\n\t\t</p>\r\n\t));\r\n\treturn (\r\n\t\t<div className=\"inventory-wrapper display-box\">\r\n\t\t\t<span className=\"display-title\">Inventory</span>\r\n\t\t\t<div className=\"inventory\">\r\n\t\t\t\t{inventory}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Inventory;","import React, { Component } from 'react';\nimport TILE_TEMPLATES from './TILE_TEMPLATES';\nimport Player from './Player';\nimport PlayerDisplay from './PlayerDisplay';\nimport Map from './Map';\nimport HUD from './HUD';\nimport Inventory from './Inventory';\nimport './App.css';\n\nconst arrowInputs = [\n\t{\n\t\tdescription: 'up',\n\t\tkeyCode: 38\n\t},\n\t{\n\t\tdescription: 'down',\n\t\tkeyCode: 40\n\t},\n\t{\n\t\tdescription: 'right',\n\t\tkeyCode: 39\n\t},\n\t{\n\t\tdescription: 'left',\n\t\tkeyCode: 37\n\t}\n];\n\nconst interactionInputs = [\n\t{\n\t\tdescription: 'close',\n\t\tkeyCode: 67\n\t}\n]\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\t//create room\n\t\tlet initRoom = [[], [], [], []];\n\t\tconst wrappedTile = (tile) => {\n\t\t\tlet arr = [];\n\t\t\tarr.push(TILE_TEMPLATES[tile]);\n\t\t\treturn arr;\n\t\t}\n\t\tfor (let i = 0; i < 10; i++) {\n\t\t\tinitRoom[0].push(wrappedTile('wall'));\n\t\t}\n\t\tinitRoom[1].push(wrappedTile('wall'));\n\t\tfor (let i = 1; i < 8; i++) {\n\t\t\tinitRoom[1].push(wrappedTile('open'));\n\t\t}\n\t\tinitRoom[1].push(wrappedTile('player'));\n\t\tinitRoom[1].push(wrappedTile('door'));\n\t\tinitRoom[2].push(wrappedTile('wall'));\n\t\tfor (let i = 1; i < 9; i++) {\n\t\t\tinitRoom[2].push(wrappedTile('open'));\n\t\t}\n\t\tinitRoom[2].push(wrappedTile('wall'));\n\t\tfor (let i = 0; i < 10; i++) {\n\t\t\tinitRoom[3].push(wrappedTile('wall'));\n\t\t}\n\t\t//place player on random open space - TBD\n\t\t\n\t\tthis.state = {\n\t\t\tturnCount: 0,\n\t\t\tplayerStats: {\n\t\t\t\thp: 10,\n\t\t\t\tsp: 0\n\t\t\t},\n\t\t\tinventory: [ //abstract inventory item templates (like TILE_TEMPLATES)\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Wooden torch',\n\t\t\t\t\ttype: 'light'\n\t\t\t\t}\n\t\t\t],\n\t\t\tdisplayLogs: [\n\t\t\t\t{\n\t\t\t\t\tturn: 0,\n\t\t\t\t\tmessage: 'You find yourself alone in a dark room.'\n\t\t\t\t}\n\t\t\t],\n\t\t\tmapState: initRoom\n\t\t};\n\t\twindow.addEventListener('keydown', (e) => {\n\t\t\tconst arrInput = arrowInputs.filter(i => i.keyCode === e.keyCode);\n\t\t\tif (arrInput.length > 0) this.handleInput(arrInput[0].description);\n\t\t\telse {\n\t\t\t\tconst interactInput = interactionInputs.filter(i => i.keyCode === e.keyCode);\n\t\t\t\tif (interactInput.length > 0) this.handleInteraction(interactInput[0].description);\n\t\t\t}\n\t\t});\n\t}\n\n\tupdateGameDisplay(update) { //logging turnCount is still not accurate 100%\n\t\tconst updatedTurnCount = this.state.turnCount + 1;\n\t\tlet logToAdd;\n\t\tif (update.engine === 'map') {\n\t\t\tlet updatedMap = JSON.parse(JSON.stringify(this.state.mapState));\n\t\t\tif (update.hasOwnProperty('to')) {\n\t\t\t\tconst currPos = this.getPlayerPos();\n\t\t\t\tupdatedMap[currPos.y][currPos.x] = updatedMap[currPos.y][currPos.x]\n\t\t\t\t\t.filter(o => o.type !== 'player');\n\t\t\t\tif (updatedMap[currPos.y][currPos.x].length === 0) updatedMap[currPos.y][currPos.x] = updatedMap[currPos.y][currPos.x].concat(Object.assign({}, TILE_TEMPLATES.open));\n\t\t\t\tupdatedMap[update.to.y][update.to.x] = updatedMap[update.to.y][update.to.x].concat(Object.assign({}, TILE_TEMPLATES.player));\n\t\t\t}\n\t\t\tif (update.hasOwnProperty('door')) {\n\t\t\t\tconst updatedDoor = Object.assign({}, TILE_TEMPLATES.door, {status: update.doorUpdate});\n\t\t\t\tupdatedMap[update.door.y][update.door.x] = updatedMap[update.door.y][update.door.x]\n\t\t\t\t\t.filter(o => o.type !== 'door')\n\t\t\t\t\t.concat(updatedDoor);\n\t\t\t\tlogToAdd = {turn: updatedTurnCount, message: 'You open the door.'};\n\t\t\t}\n\t\t\tlet updatedLogs = this.state.displayLogs;\n\t\t\tif (logToAdd !== undefined) updatedLogs = this.state.displayLogs.concat(logToAdd);\n\t\t\tthis.setState({\n\t\t\t\tturnCount: updatedTurnCount,\n\t\t\t\tmapState: updatedMap,\n\t\t\t\tdisplayLogs: updatedLogs\n\t\t\t});\n\t\t}\n\t}\n\n\tgetCell = (x, y) => {\n\t\t// console.log('getCell');\n\t\treturn this.state.mapState[y][x]; //update to get cell list (instead of top object in cell list)\n\t}\n\n\tgetPlayerPos() {\n\t\t// console.log('getPlayerPos');\n\t\tlet x = 0, y = 0;\n\t\tthis.state.mapState.forEach((row, rowIndex) => {\n\t\t\trow.forEach((cell, colIndex) => {\n\t\t\t\t// console.log('cell', cell.filter(o => o.type === 'player'));\n\t\t\t\tif (cell.filter(o => o.type === 'player').length > 0) {\n\t\t\t\t\tx = colIndex;\n\t\t\t\t\ty = rowIndex;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\t// console.log(`getPlayerPos - x: ${x}, y: ${y}`);\n\t\treturn {x, y};\n\t}\n\t\n\thandleInput(direction) {\n\t\t// console.log('handleInput', direction);\n\t\tconst xMod = direction === 'right' ? 1 : direction === 'left' ? -1 : 0;\n\t\tconst yMod = direction === 'down' ? 1 : direction === 'up' ? -1 : 0;\n\t\tconst currPos = this.getPlayerPos();\n\t\tconst x = currPos.x + xMod;\n\t\tconst y = currPos.y + yMod;\n\t\tthis.handleMove(x, y);\n\t}\n\t\n\thandleInteraction(interaction) {\n\t\t// console.log('interact', interaction);\n\t\tif (interaction === 'close') {\n\t\t\tconst door = this.getClosest('door');\n\t\t\t// console.log('door?', door);\n\t\t\tif (!door || !door.hasOwnProperty('x') || !door.x) return;\n\t\t\telse this.attemptDoorHandle(door.x, door.y, 'closed');\n\t\t}\n\t}\n\t\n\tgetClosest(obj) {\n\t\tconst currPos = this.getPlayerPos();\n\t\tconst neighbors = [\n\t\t\t[currPos.x + 1, currPos.y], \n\t\t\t[currPos.x - 1, currPos.y], \n\t\t\t[currPos.x, currPos.y + 1], \n\t\t\t[currPos.x, currPos.y - 1],\t\n\t\t\t[currPos.x + 1, currPos.y + 1],\n\t\t\t[currPos.x + 1, currPos.y - 1],\n\t\t\t[currPos.x - 1, currPos.y + 1],\n\t\t\t[currPos.x - 1, currPos.y - 1]\n\t\t];\n\t\tlet gotObj, x, y;\n\t\tneighbors.forEach(coords => {\n\t\t\tconst gotCell = this.getCell(...coords);\n\t\t\t// console.log(`in getClosest - checking cell at coords ${coords}`, gotCell);\n\t\t\tgotCell.forEach(o => {\n\t\t\t\tif (o.type === obj) {\n\t\t\t\t\tgotObj = gotCell;\n\t\t\t\t\tx = coords[0];\n\t\t\t\t\ty = coords[1];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\treturn {...gotObj, x, y}; //may update: may include reference to self coords in each tile object\n\t}\n\n\thandleMove(x, y) {\n\t\t// console.log('handleMove');\n\t\tconst toCell = this.getCell(x, y);\n\t\tif (toCell.filter(o => o.type === 'open').length > 0) this.move({engine: 'map', to: {x, y}});\n\t\tif (toCell.filter(o => o.type === 'door').length > 0) this.attemptDoorHandle(x, y);\n\t}\n\t\n\tmove(update) {\n\t\t// console.log('move');\n\t\tthis.updateGameDisplay(update);\n\t}\n\t\n\tattemptDoorHandle(x, y, toStatus) {\n\t\tconst door = this.getCell(x, y).filter(o => o.type === 'door')[0];\n\t\tif (!door || door.type !== 'door') return;\n\t\tif (door.status === 'open') {\n\t\t\tif (!toStatus) this.updateGameDisplay({engine: 'map', to: {x, y}});\n\t\t\telse this.updateGameDisplay({engine: 'map', doorUpdate: toStatus, door: {x, y}});\n\t\t}\n\t\tif (door.status === 'crushed') this.updateGameDisplay({engine: 'hud', message: 'Door\\'s straight crushed, brah.'});\n\t\tif (door.status === 'closed') this.updateGameDisplay({\n\t\t\tengine: 'map',\n\t\t\tdoorUpdate: 'open', \n\t\t\t/*\n\t\t\tidea to extend door attempts (and other basic interactions):\n\t\t\t- get door difficulty level\n\t\t\t- get rand num based on static params (i.e. standard door difficulty baseline set in program)\n\t\t\t- modify rand num using player's stats\n\t\t\t- \"roll\" i.e. (modifiedRandNum, doorDifficulty) => modRndNum > doorDiff ? 'open' : 'closed'\n\t\t\t*/\n\t\t\tdoor: {x, y}\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"game-wrapper\">\n\t\t\t\t<div className=\"display-wrapper\">\n\t\t\t\t\t<PlayerDisplay stats={this.state.playerStats}/>\n\t\t\t\t\t<Map mapState={this.state.mapState}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"display-wrapper\">\n\t\t\t\t\t<HUD logs={this.state.displayLogs}/>\n\t\t\t\t\t<Inventory inv={this.state.inventory}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}